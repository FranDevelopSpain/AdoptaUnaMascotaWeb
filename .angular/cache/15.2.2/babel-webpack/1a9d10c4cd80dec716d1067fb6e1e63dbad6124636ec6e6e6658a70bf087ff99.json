{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { ContactUsModel } from 'src/app/Models/ContactUsModel';\nlet ContactUsComponent = class ContactUsComponent {\n  constructor() {\n    this.ContactUsForm = new ContactUsModel();\n  }\n  ngOnInit() {}\n  onSubmit(formulario) {\n    alert('Formulario enviado correctamente');\n  }\n  /*METODOS PARA VALIDAR CAMPOS OBLIGATORIOS*/\n  validarCamposObligatorios(evento) {\n    //Hacemos un switch para que ejecute un codigo en funcion del input que se ha modificado\n    switch (evento.target.name) {\n      case 'nombre':\n        const inputNombre = document.getElementById('nombre');\n        if (this.ContactUsForm.nombre.length >= 3 && /^[A-Z ]+$/i.test(this.ContactUsForm.nombre)) {\n          inputNombre?.classList.remove('is-invalid');\n          this.nombreCorrecto = true;\n        } else {\n          inputNombre?.classList.add('is-invalid');\n          this.nombreCorrecto = false;\n        }\n        break;\n      case 'numeroTelefono':\n        const telefonoExpresion = {\n          telefono: /^\\d{9}$/\n        };\n        const inputTelefono = document.getElementById('telefono');\n        if (telefonoExpresion.telefono.test(evento.target.value)) {\n          inputTelefono?.classList.remove('is-invalid');\n          this.telefonoCorrecto = true;\n        } else {\n          inputTelefono?.classList.add('is-invalid');\n          this.telefonoCorrecto = false;\n        }\n        break;\n      case 'email':\n        const mailExpresionn = {\n          email: /\\S+@\\S+\\.\\S+/\n        };\n        const inputMail = document.getElementById('email');\n        if (mailExpresionn.email.test(evento.target.value)) {\n          inputMail?.classList.remove('is-invalid');\n          this.mailCorrecto = true;\n        } else {\n          inputMail?.classList.add('is-invalid');\n          this.mailCorrecto = false;\n        }\n        break;\n      case 'mensaje':\n        const inputMensaje = document.getElementById('mensaje');\n        if (this.ContactUsForm.nombre.length >= 3) {\n          inputMensaje?.classList.remove('is-invalid');\n          this.mensajeCorrecto = true;\n        } else {\n          inputMensaje?.classList.add('is-invalid');\n          this.mensajeCorrecto = false;\n        }\n        break;\n    }\n  }\n  /*METODO COMPROBACION DE BOOLENAS DE CAMPOS OBLIGATORIOS PARA ACTIVAR EL BOTON DEL FORMULARIO*/\n  comprobarCamposObligatorios(camposCorrectos) {\n    if (this.nombreCorrecto && this.telefonoCorrecto && this.mailCorrecto && this.mensajeCorrecto) {\n      camposCorrectos = true;\n    } else {\n      camposCorrectos = false;\n    }\n    return camposCorrectos;\n  }\n};\nContactUsComponent = __decorate([Component({\n  selector: 'app-contact-us',\n  templateUrl: './contact-us.component.html',\n  styleUrls: ['./contact-us.component.css']\n})], ContactUsComponent);\nexport { ContactUsComponent };","map":{"version":3,"mappings":"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","names":["Component","ContactUsModel","ContactUsComponent","constructor","ngOnInit","onSubmit","formulario","alert","validarCamposObligatorios","evento","target","name","inputNombre","document","getElementById","ContactUsForm","nombre","length","test","classList","remove","nombreCorrecto","add","telefonoExpresion","telefono","inputTelefono","value","telefonoCorrecto","mailExpresionn","email","inputMail","mailCorrecto","inputMensaje","mensajeCorrecto","comprobarCamposObligatorios","camposCorrectos","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/raquel/Desktop/AdoptaUnaMascotaWeb/src/app/Pages/ContactUs/contact-us.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ContactUsModel } from 'src/app/Models/ContactUsModel';\n\n@Component({\n  selector: 'app-contact-us',\n  templateUrl: './contact-us.component.html',\n  styleUrls: ['./contact-us.component.css']\n})\nexport class ContactUsComponent implements OnInit{\n\n  ContactUsForm = new ContactUsModel()\n\n  public nombreCorrecto: boolean;\n  public telefonoCorrecto: boolean;\n  public mailCorrecto: boolean;\n  public mensajeCorrecto: boolean;\n  public camposCorrectos: boolean;\n\n  constructor(){}\n\n  ngOnInit(){\n  }\n\n  onSubmit(formulario: NgForm) {\n    alert('Formulario enviado correctamente');\n  }\n\n  /*METODOS PARA VALIDAR CAMPOS OBLIGATORIOS*/\n  public validarCamposObligatorios(evento: any): void {\n  \n    //Hacemos un switch para que ejecute un codigo en funcion del input que se ha modificado\n    switch (evento.target.name) {\n      case 'nombre':\n        const inputNombre = document.getElementById('nombre');\n        if (this.ContactUsForm.nombre.length  >= 3  && /^[A-Z ]+$/i.test(this.ContactUsForm.nombre)) {\n          inputNombre?.classList.remove('is-invalid');\n          this.nombreCorrecto = true;\n        } else {\n          inputNombre?.classList.add('is-invalid');\n          this.nombreCorrecto = false;\n        }\n        break;\n\n\n      case 'numeroTelefono':\n        const telefonoExpresion = {\n            telefono: /^\\d{9}$/\n            }\n        const inputTelefono = document.getElementById('telefono');\n        if (telefonoExpresion.telefono.test(evento.target.value)) {\n          inputTelefono?.classList.remove('is-invalid');\n          this.telefonoCorrecto = true;\n        } else {\n          inputTelefono?.classList.add('is-invalid');\n          this.telefonoCorrecto = false;\n        }\n        break;\n\n      case 'email':\n        const mailExpresionn = {\n            email: /\\S+@\\S+\\.\\S+/,\n            }\n        const inputMail = document.getElementById('email');\n        if (mailExpresionn.email.test(evento.target.value)) {\n          inputMail?.classList.remove('is-invalid');\n          this.mailCorrecto = true;\n        } else {\n          inputMail?.classList.add('is-invalid');\n          this.mailCorrecto = false;\n        }\n        break;\n\n        case 'mensaje':\n          const inputMensaje = document.getElementById('mensaje');\n          if (this.ContactUsForm.nombre.length  >= 3) {\n            inputMensaje?.classList.remove('is-invalid');\n            this.mensajeCorrecto = true;\n          } else {\n            inputMensaje?.classList.add('is-invalid');\n            this.mensajeCorrecto = false;\n          }\n          break;\n    }\n\n  }\n\n\n      /*METODO COMPROBACION DE BOOLENAS DE CAMPOS OBLIGATORIOS PARA ACTIVAR EL BOTON DEL FORMULARIO*/\n      public comprobarCamposObligatorios(camposCorrectos: boolean): boolean {\n        if(this.nombreCorrecto &&\n          this.telefonoCorrecto &&\n          this.mailCorrecto &&\n          this.mensajeCorrecto) {\n            camposCorrectos = true;\n        } else {\n          camposCorrectos = false\n        }\n        return camposCorrectos;\n      }\n  \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}